name: Build and Deploy w/ Kubernetes

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: [self-hosted, windows]
    steps:
      - name: Add safe directory
        run: git config --global --add safe.directory C:/actions-runner/_work/banking_operations_monitor/banking_operations_monitor
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        shell: powershell
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/banking_operations_monitor
        run: |
          docker build -t $env:DOCKER_IMAGE .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        shell: pwsh
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/banking_operations_monitor
        run: |
          docker push $env:DOCKER_IMAGE

  deploy:
    needs: build
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Update kubernetes configuration
        run: |
          # update docker image reference
          $env:DOCKERHUB_USERNAME = "${{ secrets.DOCKERHUB_USERNAME }}"
          (Get-Content -path ./k8s/django-deployment.yaml) -replace '\${DOCKERHUB_USERNAME}', $env:DOCKERHUB_USERNAME | Set-Content -Path ./k8s/django-deployment.yaml

          # create a temporary configmap and secret with prod values
          $configMapContent = Get-Content -path ./k8s/env-config.yml

          # create prod secrets file using github
          $secretBase64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${{ secrets.DJANGO_SECRET_KEY }}"))
          $mongoUsernameBase64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${{ secrets.MONGODB_USERNAME }}"))
          $mongoPasswordBase64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${{ secrets.MONGODB_PASSWORD }}"))

          # Update the secrets in the YAML file
          $configMapContent = $configMapContent -replace 'DJANGO_SECRET_KEY: "ZGphbmdvLXNlY3JldC1rZXktcmVwbGFjZS1pbi1wcm9kdWN0aW9u"', "DJANGO_SECRET_KEY: `"$secretBase64`""
          $configMapContent = $configMapContent -replace 'MONGODB_USERNAME: "YWRtaW4="', "MONGODB_USERNAME: `"$mongoUsernameBase64`""
          $configMapContent = $configMapContent -replace 'MONGODB_PASSWORD: "cGFzc3dvcmQ="', "MONGODB_PASSWORD: `"$mongoPasswordBase64`""
          
          # Write updated ConfigMap and Secret to a temporary file
          $configMapContent | Set-Content -Path ./k8s/env-config-prod.yaml
      
      - name: Deploy to Kubernetes
        shell: pwsh
        run: |
          kubectl apply -f ./k8s/namespace-quota.yaml
          kubectl apply -f ./k8s/env-config-prod.yaml
          kubectl apply -f ./k8s/mongodb-deployment.yml
          kubectl apply -f ./k8s/django-deployment.yml
          
          # wait for deployments to be ready
          kubectl rollout status deployment/mongodb-deployment -n banking_operations_monitor
          kubectl rollout status deployment/django-deployment -n banking_operations_monitor

          # Clean up sensitive files
          Remove-Item -Path ./k8s/env-config-prod.yaml

          
          echo "Deployment complete! Django service is available at the following endpoint:"
          kubectl get service django-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}"
