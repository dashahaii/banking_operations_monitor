name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: [self-hosted, windows]
    steps:
      - name: Add safe directory
        run: git config --global --add safe.directory C:/actions-runner/_work/valuable_gathering_platform/valuable_gathering_platform
      
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment for running tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django tests
        run: python manage.py test

      - name: Build Docker image
        shell: pwsh
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/valuable_gathering
        run: |
          docker build -t $env:DOCKER_IMAGE .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        shell: pwsh
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/valuable_gathering
        run: |
          docker push $env:DOCKER_IMAGE

  deploy:
    needs: build
    runs-on: [self-hosted, windows]
    steps:
      - name: Write SSH Key to File
        shell: pwsh
        run: |
          $key = "${{ secrets.WINDOWS_SSH_KEY }}"
          Set-Content -Path key.pem -Value $key -NoNewline
          icacls key.pem /inheritance:r
          icacls key.pem /grant:r "$($env:USERNAME):(R)"
      
      - name: Deploy with native SSH (verbose)
        shell: pwsh
        env:
          WINDOWS_USER: ${{ secrets.WINDOWS_USER }}
          WINDOWS_HOST: ${{ secrets.WINDOWS_HOST }}
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/valuable_gathering
        run: |
          ssh -v -t -i key.pem $env:WINDOWS_USER@$env:WINDOWS_HOST "docker pull $env:DOCKER_IMAGE | tee deploy.log && docker stop valuable_gathering || true && docker rm valuable_gathering || true && docker run --name valuable_gathering -p 8000:8000 $env:DOCKER_IMAGE 2>&1 | tee -a deploy.log"
          type deploy.log
